name: Build

on:
  push:
    branches:
      - main
      - master
      - develop
    paths-ignore:
      - "**.md"
      - "docs/**"
      - "**/CHANGELOG"

  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    paths-ignore:
      - "**.md"
      - "docs/**"
      - "**/CHANGELOG"

  workflow_dispatch:
    inputs:
      pr:
        description: "Pull request#"
        required: false

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.event.number || github.sha }}
  cancel-in-progress: true

jobs:
  compile:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    name: Compile using JDK 8
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Check out PR
        run: |
          git fetch --no-tags --prune --progress --no-recurse-submodules --depth=1 \
            origin pull/${{ github.event.inputs.pr }}/merge:merged-pr && git checkout merged-pr
        if: github.event.inputs.pr != ''
      - name: Install JDK 8 and Maven
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 8
          cache: 'maven'
      - name: Compile and install libraries
        run: MAVEN_OPTS="-Xmx512M -XX:+ExitOnOutOfMemoryError" mvn --batch-mode --show-version --strict-checksums --threads C1 -Dmaven.wagon.rto=30000 -DskipTests install
      - name: Compile examples
        run: for d in $(ls -d `pwd`/examples/*/); do cd $d && mvn clean compile; done

  test-java-client:
    runs-on: ubuntu-latest
    needs: compile
    strategy:
      matrix:
        # most recent LTS releases as well as latest stable builds
        clickhouse: ["21.8", "22.3", "latest"]
      fail-fast: false
    timeout-minutes: 30
    name: Test Java client against ClickHouse ${{ matrix.clickhouse }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Check out PR
        run: |
          git fetch --no-tags --prune --progress --no-recurse-submodules --depth=1 \
            origin pull/${{ github.event.inputs.pr }}/merge:merged-pr && git checkout merged-pr
        if: github.event.inputs.pr != ''
      - name: Install JDK 11
        uses: AdoptOpenJDK/install-jdk@v1
        with:
          version: '11'
          targets: 'JDK11_HOME'
      - name: Setup Toolchain
        shell: bash
        run: |
          mkdir -p $HOME/.m2 \
          && cat << EOF > $HOME/.m2/toolchains.xml
          <?xml version="1.0" encoding="UTF8"?>
          <toolchains>
            <toolchain>
              <type>jdk</type>
              <provides>
                <version>11</version>
              </provides>
              <configuration>
                <jdkHome>${{ env.JDK11_HOME }}</jdkHome>
              </configuration>
            </toolchain>
          </toolchains>
          EOF
      - name: Install JDK 8 and Maven
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 8
          cache: 'maven'
      - name: Test Java client
        run: |
          mvn --also-make --batch-mode --projects clickhouse-cli-client,clickhouse-grpc-client,clickhouse-http-client -Drelease -DclickhouseVersion=${{ matrix.clickhouse }} verify
      - name: Upload test results
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: result ${{ github.job }}
          path: |
            **/target/failsafe-reports
            **/target/surefire-reports

  test-jdbc-driver:
    runs-on: ubuntu-latest
    needs: compile
    strategy:
      matrix:
        clickhouse: ["21.8", "22.3", "latest"]
        # http2 here represents http protocol + JDK HttpClient(http_connection_provider=HTTP_CLIENT)
        protocol: ["http", "http2", "grpc"]
        exclude:
          - clickhouse: "21.8"
            protocol: grpc
      fail-fast: false
    timeout-minutes: 30
    name: Test JDBC driver against ClickHouse ${{ matrix.clickhouse }} (${{ matrix.protocol }})
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Check out PR
        run: |
          git fetch --no-tags --prune --progress --no-recurse-submodules --depth=1 \
            origin pull/${{ github.event.inputs.pr }}/merge:merged-pr && git checkout merged-pr
        if: github.event.inputs.pr != ''
      - name: Install JDK 11
        uses: AdoptOpenJDK/install-jdk@v1
        with:
          version: '11'
          targets: 'JDK11_HOME'
      - name: Setup Toolchain
        shell: bash
        run: |
          mkdir -p $HOME/.m2 \
          && cat << EOF > $HOME/.m2/toolchains.xml
          <?xml version="1.0" encoding="UTF8"?>
          <toolchains>
            <toolchain>
              <type>jdk</type>
              <provides>
                <version>11</version>
              </provides>
              <configuration>
                <jdkHome>${{ env.JDK11_HOME }}</jdkHome>
              </configuration>
            </toolchain>
          </toolchains>
          EOF
      - name: Install JDK 8 and Maven
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 8
          cache: 'maven'
      - name: Install Java client
        run: mvn --also-make --batch-mode --projects clickhouse-cli-client,clickhouse-grpc-client,clickhouse-http-client -Drelease -DskipTests install
      - name: Test JDBC driver
        run: |
          mvn --batch-mode --projects clickhouse-jdbc -Drelease -DclickhouseVersion=${{ matrix.clickhouse }} -Dprotocol=${{ matrix.protocol }} verify
      - name: Upload test results
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: result ${{ github.job }}
          path: |
            **/target/failsafe-reports
            **/target/surefire-reports

  test-r2dbc-driver:
    runs-on: ubuntu-latest
    needs: compile
    strategy:
      matrix:
        clickhouse: ["21.8", "22.3", "latest"]
        # grpc is not fully supported
        protocol: ["http", "http2"]
      fail-fast: false
    timeout-minutes: 10
    name: Test R2DBC driver against ClickHouse ${{ matrix.clickhouse }} (${{ matrix.protocol }})
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Check out PR
        run: |
          git fetch --no-tags --prune --progress --no-recurse-submodules --depth=1 \
            origin pull/${{ github.event.inputs.pr }}/merge:merged-pr && git checkout merged-pr
        if: github.event.inputs.pr != ''
      - name: Install JDK 11
        uses: AdoptOpenJDK/install-jdk@v1
        with:
          version: '11'
          targets: 'JDK11_HOME'
      - name: Setup Toolchain
        shell: bash
        run: |
          mkdir -p $HOME/.m2 \
          && cat << EOF > $HOME/.m2/toolchains.xml
          <?xml version="1.0" encoding="UTF8"?>
          <toolchains>
            <toolchain>
              <type>jdk</type>
              <provides>
                <version>11</version>
              </provides>
              <configuration>
                <jdkHome>${{ env.JDK11_HOME }}</jdkHome>
              </configuration>
            </toolchain>
          </toolchains>
          EOF
      - name: Install JDK 8 and Maven
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 8
          cache: 'maven'
      - name: Install Java client
        run: mvn --also-make --batch-mode --projects clickhouse-jdbc -Drelease -DskipTests install
      - name: Test R2DBC driver
        run: |
          mvn --batch-mode --projects clickhouse-r2dbc -Drelease -DclickhouseVersion=${{ matrix.clickhouse }} -Dprotocol=${{ matrix.protocol }} verify
      - name: Upload test results
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: result ${{ github.job }}
          path: |
            **/target/failsafe-reports
            **/target/surefire-reports
